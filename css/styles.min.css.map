{"version":3,"sources":["<no source>","libs/_fonts.scss","base/_base.scss","base/_grid.scss","content/_doctor.scss","breakpoint/_breakpoint.scss","footer/_style.scss"],"names":[],"mappings":"AAAA,WAAA,4BAAA,kBAAA,gBAAA,4ZAAA,CAAA,WAAA,4BAAA,kBAAA,gBAAA,kZAAA,CAAA,WAAA,4BAAA,kBAAA,gBAAA,uYAAA,CAAA,WAAA,4BAAA,kBAAA,gBAAA,wZAAA,CAAA,WAAA,4BAAA,kBAAA,gBAAA,gZAAA,CAAA,WAAA,4BAAA,kBAAA,gBAAA,kZAAA,CAAA,WAAA,4BAAA,kBAAA,gBAAA,+YAAA,CAAA,WAAA,4BAAA,kBAAA,gBAAA,qYAAA,CAAA,WAAA,4BAAA,kBAAA,gBAAA,yYAAA,CAAA,WAAA,4BAAA,kBAAA,gBAAA,2YAAA,CAAA,WAAA,4BAAA,kBAAA,gBAAA,mYAAA,CAAA,WAAA,4BAAA,kBAAA,gBAAA,qYAAA,CAAA,ACAA,4GAAY,ACIZ,UAHI,UAAW,CAGf,AAWC,KATG,SAAS,AACT,UAAU,AACV,SAAS,AACT,oBAAoB,AACpB,mBAAmB,AACnB,oBAAoB,AACpB,gBAAgB,AAChB,wBAAwB,AACxB,sCAA0C,CAC7C,AAED,EACI,8BAAA,AAAsB,qBAAA,CACzB,AAED,2BAGQ,oBAAqB,CACxB,AAUL,kGAGQ,YAAa,CAChB,AAGL,WACI,OAAQ,CAOX,AARD,iBAGQ,WAAW,AACX,cAAc,AACd,cAAc,AACd,UAAW,CACd,ACjDL,WACI,8BAAA,AAAsB,sBAAA,AACtB,kBAAkB,AAClB,iBAAiB,AACjB,iBAAkB,CACrB,AAMD,yBACI,WACI,UAAW,CACd,CAAA,AAGL,0BACI,WACI,YAAa,CAChB,CAAA,AChBL,oDAHC,oBAAA,AAAa,oBAAb,AAAa,YAAA,CAGd,AAeC,iCAZA,wBAAA,AAAuB,qBAAvB,AAAuB,uBAAA,AACvB,UAAU,AACV,aAAa,AACb,cAAe,CASf,AAfD,yCASE,wBAAA,AAAoB,mBAAA,CACpB,ACkDE,yBD5DJ,iCAaE,UAAW,CAEZ,CAAA,AAED,iBACC,iBAAiB,AACjB,WAAY,AACZ,sGAAA,AAAsG,iGAAtG,AAAsG,gGAAA,CAgBtG,AAnBD,iCAME,aAAa,AACb,iBAAkB,CAClB,AARF,uCAWE,kBAAkB,AAClB,eAAe,AACf,gBAAiB,CAKjB,AAlBF,2CAgBG,eAAgB,CAChB,AAIH,gBACC,cAAc,AACd,8EAAA,AAA6E,yEAA7E,AAA6E,qEAAA,CAY7E,AAdD,gCAKE,iBAAkB,CAClB,AANF,mCAUG,eAAe,AACf,eAAmB,CACnB,AEtDH,mBACC,oBAAA,AAAa,oBAAb,AAAa,aAAA,AACb,wBAAA,AAAuB,qBAAvB,AAAuB,uBAAA,AACvB,yBAAA,AAAmB,sBAAnB,AAAmB,mBAAA,AACnB,YAAa,CAKb,AATD,iCAOE,iBAAkB,CAClB","file":"styles.min.css","sourcesContent":[null,"@import url('https://fonts.googleapis.com/css?family=Source+Sans+Pro:300,400&subset=cyrillic,cyrillic-ext');","html{\n    width: 100%;\n}\n\nbody{\n    width: 100%;\n    margin: 0;\n    padding: 0;\n    border: 0;\n    font-weight: inherit;\n    font-style: inherit;\n    font-family: inherit;\n    text-align: left;\n    vertical-align: baseline;\n    font-family: 'Source Sans Pro', sans-serif;\n}\n\n* {\n    box-sizing: border-box;\n}\n\na {\n    text-decoration: none;\n    &:hover, &:focus, &:active{\n        text-decoration: none;\n    }\n}\n\ninput{\n    outline: none;\n    &:hover, &:focus, &:active{\n        outline: none;\n    }\n}\n\ntextarea{\n    outline: none;\n    &:hover, &:focus, &:active{\n        outline: none;\n    }\n}\n\n%clearfix {\n    *zoom: 1;\n    &:after {\n        content: '';\n        display: table;\n        line-height: 0;\n        clear: both;\n    }\n}\n",".container {\n    box-sizing: border-box;\n    margin-right: auto;\n    margin-left: auto;\n    position: relative;\n}\n\n.container {\n    @extend %clearfix;\n}\n\n@media (min-width: 320px) {\n    .container {\n        width: 100%;\n    }\n}\n\n@media (min-width: 1024px) {\n    .container {\n        width: 1024px;\n    }\n}\n\n",".doctor__container {\r\n\tdisplay: flex;\r\n}\r\n\r\n.doctor__collars,\r\n.doctor__bionic {\r\n\tdisplay: flex;\r\n\talign-items: flex-start;\r\n\twidth: 50%;\r\n\theight: 394px;\r\n\tpadding: 0 15px;\r\n\r\n\timg {\r\n\t\talign-self: flex-end;\r\n\t}\r\n\r\n\t@include breakpoint(max-width 576px) {\r\n\t\twidth: 100%;\r\n\t}\r\n}\r\n\r\n.doctor__collars {\r\n\tpadding-top: 40px;\r\n\tcolor: white;\r\n\tbackground: radial-gradient(circle at 16% 42%, #A5AAA4 0%, #8F968F 9.3%, #687267 26.53%, #3A3E37 100%);\r\n\r\n\timg:first-child {\r\n\t\theight: 340px;\r\n\t\tmargin-right: 50px;\r\n\t}\r\n\r\n\t.doctor__collars-desc {\r\n\t\ttext-align: center;\r\n\t\tfont-size: 18px;\r\n\t\tline-height: 24px;\r\n\r\n\t\timg {\r\n\t\t\tmargin-top: 25px;\r\n\t\t}\r\n\t}\r\n}\r\n\r\n.doctor__bionic {\r\n\tcolor: #37383E;\r\n\tbackground: radial-gradient(circle, #FFFFFF 0%, #F8F7F3 21.43%, #E1E5D7 100%);\r\n\r\n\timg:first-child {\r\n\t\tmargin-right: 20px;\r\n\t}\r\n\r\n\t.doctor__bionic {\r\n\t\th3 {\r\n\t\t\tfont-size: 18px;\r\n\t\t\tfont-weight: normal;\r\n\t\t}\r\n\t}\r\n}","//////////////////////////////\n// Default Variables\n//////////////////////////////\n$Breakpoint-Settings: (\n  'default media': all,\n  'default feature': min-width,\n  'default pair': width,\n\n  'force all media type': false,\n  'to ems': false,\n  'transform resolutions': true,\n\n  'no queries': false,\n  'no query fallbacks': false,\n\n  'base font size': 16px,\n\n  'legacy syntax': false\n);\n\n$breakpoint: () !default;\n\n//////////////////////////////\n// Imports\n//////////////////////////////\n@import \"breakpoint/settings\";\n@import 'breakpoint/context';\n@import 'breakpoint/helpers';\n@import 'breakpoint/parsers';\n@import 'breakpoint/no-query';\n\n@import 'breakpoint/respond-to';\n\n@import \"breakpoint/legacy-settings\";\n\n//////////////////////////////\n// Breakpoint Mixin\n//////////////////////////////\n\n@mixin breakpoint($query, $no-query: false) {\n  @include legacy-settings-warning;\n\n  // Reset contexts\n  @include private-breakpoint-reset-contexts();\n\n  $breakpoint: breakpoint($query, false);\n\n  $query-string: map-get($breakpoint, 'query');\n  $query-fallback: map-get($breakpoint, 'fallback');\n\n  $private-breakpoint-context-holder: map-get($breakpoint, 'context holder') !global;\n  $private-breakpoint-query-count: map-get($breakpoint, 'query count') !global;\n\n  // Allow for an as-needed override or usage of no query fallback.\n  @if $no-query != false {\n    $query-fallback: $no-query;\n  }\n\n  @if $query-fallback != false {\n    $context-setter: private-breakpoint-set-context('no-query', $query-fallback);\n  }\n\n  // Print Out Query String\n  @if not breakpoint-get('no queries') {\n    @media #{$query-string} {\n      @content;\n    }\n  }\n\n  @if breakpoint-get('no query fallbacks') != false or breakpoint-get('no queries') == true {\n\n    $type: type-of(breakpoint-get('no query fallbacks'));\n    $print: false;\n\n    @if ($type == 'bool') {\n      $print: true;\n    }\n    @else if ($type == 'string') {\n      @if $query-fallback == breakpoint-get('no query fallbacks') {\n        $print: true;\n      }\n    }\n    @else if ($type == 'list') {\n      @each $wrapper in breakpoint-get('no query fallbacks') {\n        @if $query-fallback == $wrapper {\n          $print: true;\n        }\n      }\n    }\n\n    // Write Fallback\n    @if ($query-fallback != false) and ($print == true) {\n      $type-fallback: type-of($query-fallback);\n\n      @if ($type-fallback != 'bool') {\n        #{$query-fallback} & {\n          @content;\n        }\n      }\n      @else {\n        @content;\n      }\n    }\n  }\n\n  @include private-breakpoint-reset-contexts();\n}\n\n\n@mixin mq($query, $no-query: false) {\n  @include breakpoint($query, $no-query) {\n    @content;\n  }\n}\n",".footer__container {\r\n\tdisplay: flex;\r\n\tjustify-content: center;\r\n\talign-items: center;\r\n\theight: 127px;\r\n\t\r\n\ta:first-child {\r\n\t\tmargin-right: 15px;\r\n\t}\r\n}"],"sourceRoot":"css-source"}